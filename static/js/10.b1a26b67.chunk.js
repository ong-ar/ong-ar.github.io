(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{65:function(n,s,a){"use strict";function t(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}a.d(s,"a",function(){return t})},66:function(n,s,a){"use strict";function t(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function p(n,s,a){return s&&t(n.prototype,s),a&&t(n,a),n}a.d(s,"a",function(){return p})},67:function(n,s,a){"use strict";function t(n){return(t=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}a.d(s,"a",function(){return t})},68:function(n,s,a){"use strict";function t(n){return(t="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function p(n){return(p="function"===typeof Symbol&&"symbol"===t(Symbol.iterator)?function(n){return t(n)}:function(n){return n&&"function"===typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":t(n)})(n)}function o(n,s){return!s||"object"!==p(s)&&"function"!==typeof s?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):s}a.d(s,"a",function(){return o})},69:function(n,s,a){"use strict";function t(n,s){return(t=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function p(n,s){if("function"!==typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&t(n,s)}a.d(s,"a",function(){return p})},88:function(n,s,a){"use strict";a.r(s),a.d(s,"readingTime",function(){return d}),a.d(s,"default",function(){return g}),a.d(s,"tableOfContents",function(){return h}),a.d(s,"frontMatter",function(){return f});var t=a(13),p=a(65),o=a(66),e=a(68),c=a(67),l=a(69),u=a(0),k=a.n(u),r=a(21),i=a(89),m=a.n(i),d={text:"7 min read",minutes:6.19,time:371400.00000000006,words:1238},g=function(n){function s(n){var a;return Object(p.a)(this,s),(a=Object(e.a)(this,Object(c.a)(s).call(this,n))).layout=null,a}return Object(l.a)(s,n),Object(o.a)(s,[{key:"render",value:function(){var n=this.props,s=n.components;Object(t.a)(n,["components"]);return k.a.createElement(r.MDXTag,{name:"wrapper",components:s},k.a.createElement("div",{className:m.a.Welcome},k.a.createElement(r.MDXTag,{name:"h2",components:s,props:{id:"\ucc38\uace0"}},"\ucc38\uace0"),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},k.a.createElement(r.MDXTag,{name:"a",components:s,parentName:"li",props:{href:"https://scotch.io/tutorials/5-ways-to-convert-react-class-components-to-functional-components-w-react-hooks"}},"https://scotch.io/tutorials/5-ways-to-convert-react-class-components-to-functional-components-w-react-hooks")),k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"react 16.8 (hooks) \uc774\uc0c1")),k.a.createElement(r.MDXTag,{name:"h2",components:s,props:{id:"\uac1c\uc778\uc801\uc778-\uc758\uacac"}},"\uac1c\uc778\uc801\uc778 \uc758\uacac"),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"class \ubcf4\ub2e4 functional \uc774 \uac00\ub3c5\uc131\uc774 \ub192\uc74c")),k.a.createElement(r.MDXTag,{name:"h2",components:s,props:{id:"1-state-\ub610\ub294-lifecyce-\uc774-\uc5c6\ub294-\ud074\ub798\uc2a4\uc77c-\uacbd\uc6b0"}},"1. state \ub610\ub294 lifecyce \uc774 \uc5c6\ub294 \ud074\ub798\uc2a4\uc77c \uacbd\uc6b0"),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"class")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">alertName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"John Doe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>h3<span class="token operator">></span> This is a Class Component <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>alertName<span class="token punctuation">}</span><span class="token operator">></span> Alert <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"functional")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">alertName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">" John Doe "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>h3<span class="token operator">></span> This is a Functional Component <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>alertName<span class="token punctuation">}</span><span class="token operator">></span> Alert <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"h2",components:s,props:{id:"2-state-\uac00-\uc788\ub294-class-\uc77c-\uacbd\uc6b0"}},"2. state \uac00 \uc788\ub294 class \uc77c \uacbd\uc6b0"),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"class")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">""</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">alertName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>h3<span class="token operator">></span> This is a Class Component <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your name"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>alertName<span class="token punctuation">}</span><span class="token operator">></span> Alert <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"functional")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> setName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">"John Doe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">alertName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setName</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>h3<span class="token operator">></span> This is a Functional Component <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"Your name"</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>alertName<span class="token punctuation">}</span><span class="token operator">></span> Alert <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"h2",components:s,props:{id:"3-\uc5ec\ub7ec-\uac1c\uc758-state-\uac00-\uc788\ub294-class-\uc77c-\uacbd\uc6b0"}},"3. \uc5ec\ub7ec \uac1c\uc758 state \uac00 \uc788\ub294 class \uc77c \uacbd\uc6b0"),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"class")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    userName<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    firstName<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    lastName<span class="token punctuation">:</span> <span class="token string">""</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">logName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// do whatever with the names ... let\'s just log them here</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>userName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>firstName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>lastName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleUserNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userName<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">handleFirstNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> firstName<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">handleLastNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> lastName<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>h3<span class="token operator">></span> This is a Class Component <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleUserNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>userName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your username"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleFirstNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>firstName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your firstname"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleLastNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>lastName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your lastname"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>button className<span class="token operator">=</span><span class="token string">"btn btn-large right"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>logName<span class="token punctuation">}</span><span class="token operator">></span>\n          <span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n          Log Names<span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"functional")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>userName<span class="token punctuation">,</span> setUsername<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>firstName<span class="token punctuation">,</span> setFirstname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lastName<span class="token punctuation">,</span> setLastname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">logName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// do whatever with the names... let\'s just log them here</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>firstName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lastName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleUserNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setUsername</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleFirstNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setFirstname</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleLastNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setLastname</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>h3<span class="token operator">></span> This is a functional Component <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleUserNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>userName<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"username..."</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleFirstNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>firstName<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"firstname..."</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleLastNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>lastName<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"lastname..."</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>button className<span class="token operator">=</span><span class="token string">"btn btn-large right"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span>logName<span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n        Log Names<span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"h2",components:s,props:{id:"4-state-\uc640-componentdidmount-\ub97c-\uc0ac\uc6a9\ud55c-class-\uc77c-\uacbd\uc6b0"}},"4. state \uc640 componentDidMount \ub97c \uc0ac\uc6a9\ud55c class \uc77c \uacbd\uc6b0"),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"class")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment">// initial state</span>\n    userName<span class="token punctuation">:</span> <span class="token string">"JD"</span><span class="token punctuation">,</span>\n    firstName<span class="token punctuation">:</span> <span class="token string">"John"</span><span class="token punctuation">,</span>\n    lastName<span class="token punctuation">:</span> <span class="token string">"Doe"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token comment">// update state</span>\n        userName<span class="token punctuation">:</span> <span class="token string">"MJ"</span><span class="token punctuation">,</span>\n        firstName<span class="token punctuation">:</span> <span class="token string">"Mary"</span><span class="token punctuation">,</span>\n        lastName<span class="token punctuation">:</span> <span class="token string">"jane"</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">logName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// do whatever with the names ... let\'s just log them here</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>userName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>firstName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>lastName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function-variable function">handleUserNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userName<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">handleFirstNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> firstName<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token function-variable function">handleLastNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> lastName<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>h3<span class="token operator">></span> The text fields will update <span class="token keyword">in</span> <span class="token number">5</span> seconds <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleUserNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>userName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your username"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleFirstNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>firstName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your firstname"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleLastNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>lastName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your lastname"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>button className<span class="token operator">=</span><span class="token string">"btn btn-large right"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>logName<span class="token punctuation">}</span><span class="token operator">></span>\n          <span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n          Log Names<span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"functional")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>userName<span class="token punctuation">,</span> setUsername<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">"JD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>firstName<span class="token punctuation">,</span> setFirstname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">"John"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lastName<span class="token punctuation">,</span> setLastname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">"Doe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"MJ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">setFirstname</span><span class="token punctuation">(</span><span class="token string">"Mary"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">setLastname</span><span class="token punctuation">(</span><span class="token string">"Jane"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">logName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// do whatever with the names ...</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>userName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>firstName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>lastName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleUserNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token punctuation">{</span> userName<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleFirstNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setFirstname</span><span class="token punctuation">(</span><span class="token punctuation">{</span> firstName<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleLastNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setLastname</span><span class="token punctuation">(</span><span class="token punctuation">{</span> lastName<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>h3<span class="token operator">></span> The text fields will update <span class="token keyword">in</span> <span class="token number">5</span> seconds <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleUserNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>userName<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"Your username"</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleFirstNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>firstName<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"Your firstname"</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleLastNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>lastName<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"Your lastname"</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>button className<span class="token operator">=</span><span class="token string">"btn btn-large right"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span>logName<span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n        Log Names<span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"h2",components:s,props:{id:"5-state-\uc640-componentdidmount-componentdidupdate-\ub97c-\uc0ac\uc6a9\ud55c-class-\uc77c-\uacbd\uc6b0"}},"5. state \uc640 componentDidMount, componentDidUpdate \ub97c \uc0ac\uc6a9\ud55c class \uc77c \uacbd\uc6b0"),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"class")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    header<span class="token punctuation">:</span> <span class="token string">"Welcome to React Hooks"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> header <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"#header"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      header<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>header<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">logName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// do whatever with the names ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// { ... }</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>h3 id<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span> This is a Class Component <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleUserNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>userName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your username"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleFirstNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>firstName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your firstname"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleLastNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>lastName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your lastname"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>button className<span class="token operator">=</span><span class="token string">"btn btn-large right"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>logName<span class="token punctuation">}</span><span class="token operator">></span>\n          <span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n          Log Names<span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    header<span class="token punctuation">:</span> <span class="token string">"Welcome to React Hooks"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> header <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"#header"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      header<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>header<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> node <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"#header"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    node<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>header<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">logName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// do whatever with the names ... let\'s just log them here</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// { ... }</span>\n\n  <span class="token function-variable function">handleHeaderInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> header<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div<span class="token operator">></span>\n        <span class="token operator">&lt;</span>h3 id<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span> This is a Class Component <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleUserNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>userName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your username"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleFirstNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>firstName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your firstname"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleLastNameInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>lastName<span class="token punctuation">}</span>\n          placeholder<span class="token operator">=</span><span class="token string">"Your lastname"</span>\n        <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token operator">&lt;</span>button className<span class="token operator">=</span><span class="token string">"btn btn-large right"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>logName<span class="token punctuation">}</span><span class="token operator">></span>\n          <span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n          Log Names<span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n        <span class="token operator">&lt;</span>input\n          type<span class="token operator">=</span><span class="token string">"text"</span>\n          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleHeaderInput<span class="token punctuation">}</span>\n          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>header<span class="token punctuation">}</span>\n        <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}})),k.a.createElement(r.MDXTag,{name:"ul",components:s},k.a.createElement(r.MDXTag,{name:"li",components:s,parentName:"ul"},"functional")),k.a.createElement(r.MDXTag,{name:"pre",components:s},k.a.createElement(r.MDXTag,{name:"code",components:s,parentName:"pre",props:{className:"language-javascript","data-language":"javascript","data-highlighted-line-numbers":"",dangerouslySetInnerHTML:{__html:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>userName<span class="token punctuation">,</span> setUsername<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>firstName<span class="token punctuation">,</span> setFirstname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>lastName<span class="token punctuation">,</span> setLastname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>header<span class="token punctuation">,</span> setHeader<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">"Welcome to React Hooks"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">logName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// do whatever with the names...</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> newheader <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"#header"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      newheader<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> header<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">handleUserNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setUsername</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleFirstNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setFirstname</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleLastNameInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setLastname</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleHeaderInput</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setHeader</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>div<span class="token operator">></span>\n      <span class="token operator">&lt;</span>h3 id<span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span> This is a functional Component <span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>\n\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleUserNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>userName<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"username..."</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleFirstNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>firstName<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"firstname..."</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>input\n        type<span class="token operator">=</span><span class="token string">"text"</span>\n        onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleLastNameInput<span class="token punctuation">}</span>\n        value<span class="token operator">=</span><span class="token punctuation">{</span>lastName<span class="token punctuation">}</span>\n        placeholder<span class="token operator">=</span><span class="token string">"lastname..."</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>button className<span class="token operator">=</span><span class="token string">"btn btn-large right"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span>logName<span class="token punctuation">}</span><span class="token operator">></span>\n        <span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n        Log Names<span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span>\n      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleHeaderInput<span class="token punctuation">}</span> value<span class="token operator">=</span><span class="token punctuation">{</span>header<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>\n'}}}))))}}]),s}(k.a.Component),h=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];return[{id:"\ucc38\uace0",level:2,title:"\ucc38\uace0",children:[]},{id:"\uac1c\uc778\uc801\uc778-\uc758\uacac",level:2,title:"\uac1c\uc778\uc801\uc778 \uc758\uacac",children:[]},{id:"1-state-\ub610\ub294-lifecyce-\uc774-\uc5c6\ub294-\ud074\ub798\uc2a4\uc77c-\uacbd\uc6b0",level:2,title:"1. state \ub610\ub294 lifecyce \uc774 \uc5c6\ub294 \ud074\ub798\uc2a4\uc77c \uacbd\uc6b0",children:[]},{id:"2-state-\uac00-\uc788\ub294-class-\uc77c-\uacbd\uc6b0",level:2,title:"2. state \uac00 \uc788\ub294 class \uc77c \uacbd\uc6b0",children:[]},{id:"3-\uc5ec\ub7ec-\uac1c\uc758-state-\uac00-\uc788\ub294-class-\uc77c-\uacbd\uc6b0",level:2,title:"3. \uc5ec\ub7ec \uac1c\uc758 state \uac00 \uc788\ub294 class \uc77c \uacbd\uc6b0",children:[]},{id:"4-state-\uc640-componentdidmount-\ub97c-\uc0ac\uc6a9\ud55c-class-\uc77c-\uacbd\uc6b0",level:2,title:"4. state \uc640 componentDidMount \ub97c \uc0ac\uc6a9\ud55c class \uc77c \uacbd\uc6b0",children:[]},{id:"5-state-\uc640-componentdidmount-componentdidupdate-\ub97c-\uc0ac\uc6a9\ud55c-class-\uc77c-\uacbd\uc6b0",level:2,title:"5. state \uc640 componentDidMount, componentDidUpdate \ub97c \uc0ac\uc6a9\ud55c class \uc77c \uacbd\uc6b0",children:[]}]},f={}},89:function(n,s,a){}}]);
//# sourceMappingURL=10.b1a26b67.chunk.js.map